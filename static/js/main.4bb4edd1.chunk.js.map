{"version":3,"sources":["components/NavbarAppComponent/NavbarAppComponent.js","Hooks/usePathName.js","pages/HomePage/HomePage.js","components/MoviesAndActors/HeaderActorsPage/HeaderActorsPage.js","components/MoviesAndActors/ActorCard/ActorCard.js","components/MoviesAndActors/Actors/Actors.js","components/MoviesAndActors/SearchBox/SearchBox.js","model/ActorModel.js","pages/ActorsPage/ActorsPage.js","components/MoviesAndActors/MovieCard/MovieCard.js","components/MoviesAndActors/Movies/Movies.js","model/MovieModel.js","pages/MoviesPage/MoviesPage.js","pages/NotFoundPage/NotFoundPage.js","components/Todo/NewTodoInput/NewTodoInput.js","components/Todo/TodoItem/TodoItem.js","components/Todo/TodoList/TodoList.js","pages/TodoPage/TodoPage.js","components/DogBook/BreedMenuBar/BreedMenuBar.js","components/DogBook/BreedCard/BreedCard.js","components/DogBook/MasonryBreedCards/MasonryBreedCards.js","model/BreedModel.js","pages/BreedsPage/BreedsPage.js","components/DogBook/MasonryImages/MasonryImages.js","pages/BreedPage/BreedPage.js","App.js","reportWebVitals.js","index.js"],"names":["NavbarAppComponent","currentPath","useLocation","pathname","Navbar","className","Nav","Link","href","active","src","alt","includes","HomePage","useState","moviesResult","setmoviesResult","index","setIndex","additionalInfo","setAdditionalInfo","carouselMovie","useEffect","axios","get","then","res","data","results","slice","length","title","overview","map","item","id","push","Carousel","Item","poster_path","Container","fade","activeIndex","onSelect","selectedIndex","e","Image","fluid","HeaderActorsPage","onFilterChange","onSortChange","Form","Row","Col","Label","Control","type","onChange","target","value","as","ActorCard","actor","redirectTo","setRedirectTo","undefined","to","Card","onClick","Img","variant","img","Body","Title","imdb","rel","fname","lname","Text","deathDay","age","Actors","actorsCards","filterBy","sortBy","actors","filter","toLowerCase","sort","a","b","toUpperCase","localeCompare","SearchBox","placeHolder","searchText","onSearchChange","onResultSelected","InputGroup","Prepend","FormControl","placeholder","ListGroup","result","action","ActorModel","plainActor","birthday","this","getAge","dateString","deadString","today","Date","birthDate","getFullYear","m","getMonth","getDate","ActorsPage","filterText","setFilterText","setSortBy","setSearchText","setResults","setActors","process","concat","newActors","newSearchText","searchURL","response","name","resultIndex","some","el","parseInt","imgURL","profile_path","fullName","trim","nameArr","split","join","searchIndexURL","deathday","imdb_id","MovieCard","movie","posterPath","runtime","director","stars","plot","Movies","moviesCards","movies","MovieModel","MoviesPage","actorId","useParams","setMovies","movieList","promise1","promise2","Promise","all","responses","setStars","cast","x","setDirector","crew","find","job","setRuntime","unshift","plainMovie","Spinner","NotFoundPage","NewTodoInput","props","newTodo","setNewTodo","onSubmit","preventDefault","addTodoProps","handleSubmit","handleChangeNewTodo","TodoItem","addButton","setAddButton","onMouseOver","onMouseOut","Check","todo","completed","checked","handleChangeProps","label","deleteTodoProps","handleShow","TodoList","todos","ListGroupItem","TodoPage","setTodos","opensTodos","setOpensTodos","setFilter","showModal","setShowModal","todoForDel","setTodoForDel","deleteTodo","handleClose","Math","random","toString","substr","Modal","show","onHide","ModalHeader","closeButton","ModalTitle","ModalBody","ModalFooter","Button","BreedMenuBar","handleFilter","handleChangeImages","ButtonToolbar","aria-label","ButtonGroup","BreedCard","breed","changeImage","setImg","history","useHistory","cardTitle","charAt","newImg","message","MasonryBreedCards","breedsList","columnsCountBreakPoints","350","750","900","columnsCount","gutter","style","width","display","BreedModel","BreedsPage","breeds","setBreeds","changeImages","setChangeImages","Object","keys","breedsFiltered","event","MasonryImages","images","image","i","url","newWindow","window","open","opener","openInNewTab","BreedPage","imgList","setImgList","imgs","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4bb4edd1.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Nav, Navbar } from 'react-bootstrap'\r\nimport './NavbarAppComponent.css'\r\nimport usePathName from \"../../Hooks/usePathName\"\r\n\r\nexport default function NavbarAppComponent() {\r\n\r\n    const currentPath = usePathName();\r\n\r\n    return (\r\n        <Navbar className=\"c-navbar\">\r\n\r\n            <Nav className=\"mr-auto\">\r\n                <Nav.Link href=\"#home\" active={currentPath === \"/\" || currentPath === \"/home\"}><img src=\"https://cdn3.iconfinder.com/data/icons/eziconic-v1-0/256/01.png\" alt=\"Home\" /> Home </Nav.Link>\r\n                <Nav.Link href=\"#actors\" active={currentPath === \"/actors\"}><img src=\"https://cdn4.iconfinder.com/data/icons/avatars-xmas-giveaway/128/chaplin_comedy_actor_man-256.png\" alt=\"Actors\" /> Actors</Nav.Link>\r\n                <Nav.Link href=\"#movies\" active={currentPath.includes(\"movies\")}><img src=\"https://cdn3.iconfinder.com/data/icons/ballicons-reloaded-free/512/icon-94-256.png\" alt=\"Movies\" /> Movies</Nav.Link>\r\n                <Nav.Link href=\"#todo\" active={currentPath === \"/todo\"}><img src=\"https://cdn2.iconfinder.com/data/icons/xomo-basics/128/document-03-256.png\" alt=\"Todo\" /> Todo</Nav.Link>\r\n                <Nav.Link href=\"#breeds\" active={currentPath === \"/breeds\"}><img src=\"https://cdn4.iconfinder.com/data/icons/book-genres-1/340/dog_book_pet_animal_friend_read-512.png\" alt=\"Dog Breeds\" /> Dog Breeds</Nav.Link>\r\n\r\n            </Nav>\r\n\r\n        </Navbar>\r\n\r\n\r\n\r\n    )\r\n}","import { useLocation } from \"react-router-dom\"\r\n\r\nexport default function usePathName() {\r\n    const location = useLocation();\r\n    return location.pathname;\r\n}","import axios from \"axios\";\r\nimport React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Container, Image, Carousel } from \"react-bootstrap\";\r\nimport './HomePage.css';\r\n\r\nexport default function HomePage() {\r\n\r\n    const [moviesResult, setmoviesResult] = useState([]);\r\n    const [index, setIndex] = useState(0);\r\n    const [additionalInfo, setAdditionalInfo] = useState(\"\");\r\n    let carouselMovie = [];\r\n\r\n    const handleSelect = (selectedIndex, e) => {\r\n        setIndex(selectedIndex);\r\n        setAdditionalInfo(\r\n            <div>\r\n                <h4>{moviesResult[selectedIndex].title}</h4>\r\n                <h6>Plot: {moviesResult[selectedIndex].overview}</h6>\r\n            </div>);\r\n    };\r\n    // api_key = \"e70409f7a117c8f9236121045c0bdf8e\"\r\n    useEffect(() => {\r\n        axios.get(\"https://api.themoviedb.org/3/movie/top_rated?api_key=e70409f7a117c8f9236121045c0bdf8e&language=en-US&page=1\").then(res => {\r\n            setmoviesResult(res.data.results.slice(0, 10));\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (moviesResult && moviesResult.length > 0) {\r\n            setAdditionalInfo(<div>\r\n                <h6>{moviesResult[0].title}</h6>\r\n                <h6>Plot: {moviesResult[0].overview}</h6></div>)\r\n        }\r\n    }, [moviesResult]);\r\n\r\n    if (moviesResult && moviesResult.length > 0) {\r\n        moviesResult.map((item, id) => {\r\n            carouselMovie.push(\r\n                <Carousel.Item key={id}>\r\n                    <img\r\n                        src={`https://image.tmdb.org/t/p/w500/${item.poster_path}`}\r\n                        alt={`${id} slide`} />\r\n                </Carousel.Item>\r\n\r\n            );\r\n        });\r\n    }\r\n\r\n\r\n    return (\r\n        <Container className=\"p-home\">\r\n            <h1>Top 10 Rated Movies</h1>\r\n            <Carousel fade activeIndex={index} onSelect={handleSelect}>\r\n                {carouselMovie ? carouselMovie\r\n                    : <Image src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/3/33/Film_Barnstar_Hires_Gold.svg/2000px-Film_Barnstar_Hires_Gold.svg.png\" fluid />}\r\n            </Carousel>\r\n            <h6 className=\"text-center\">{additionalInfo ? additionalInfo : \"\"}</h6>\r\n\r\n        </Container>\r\n    );\r\n}","import React from 'react';\r\nimport { Col, Form } from 'react-bootstrap';\r\nimport './HeaderActorsPage.css';\r\n\r\nexport default function HeaderActorsPage({ onFilterChange, onSortChange }) {\r\n    return (\r\n        <Form className=\"p-actor-header\">\r\n            <Form.Row>\r\n                <Col className=\"col-md-8 col-12\">\r\n                    <Form.Label>Filter by:</Form.Label>\r\n                    <Form.Control type=\"text\" onChange={(e) => onFilterChange(e.target.value)} />\r\n                </Col>\r\n                <Col className=\"col-md-4 col-12\">\r\n                    <Form.Label>Sort by:</Form.Label>\r\n                    <Form.Control as=\"select\" onChange={(e) => onSortChange(e.target.value)}>\r\n                        <option value=\"fname\">First Name</option>\r\n                        <option value=\"lname\">Last Name</option>\r\n                        <option value=\"aged\">Age &darr;</option>\r\n                        <option value=\"agea\">Age &uarr;</option>\r\n                    </Form.Control>\r\n                </Col>\r\n            </Form.Row>\r\n        </Form>\r\n    )\r\n}","import React, { useState } from 'react'\r\nimport { Card } from 'react-bootstrap'\r\nimport { Redirect } from 'react-router';\r\nimport './ActorCard.css';\r\nexport default function ActorCard({ actor }) {\r\n    const [redirectTo, setRedirectTo] = useState();\r\n    if (redirectTo !== undefined) {\r\n        return <Redirect to={'/actor/' + redirectTo + '/movies'} />\r\n    }\r\n    return (\r\n        <Card className=\"col-sm-6 col-md-3 c-actor-card\" onClick={() => setRedirectTo(actor.id)}>\r\n            <Card.Img variant=\"top\" src={actor.img} />\r\n            <Card.Body className=\"c-actor-card-body\">\r\n                <Card.Title className=\"title\">\r\n                    <a href={actor.imdb} target=\"_blank\" rel=\"noreferrer\">\r\n                        {`${actor.fname} ${actor.lname}`}\r\n                    </a>\r\n                </Card.Title>\r\n                <Card.Text className={actor.deathDay ? \"text-alert\" : \"\"}>\r\n                    {actor.age} {actor.deathDay ? \" (deceased)\" : \"\"}\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n    )\r\n}","import React from 'react'\r\nimport ActorCard from '../ActorCard/ActorCard';\r\nimport './Actors.css'\r\n\r\nexport default function Actors({ filterBy, sortBy, actors }) {\r\n\r\n    let actorsCards;\r\n    if (actors) {\r\n        if (filterBy) {\r\n            actors = actors.filter(actor => actor.fname.toLowerCase().includes(filterBy.toLowerCase()) ||\r\n                actor.lname.toLowerCase().includes(filterBy.toLowerCase()));\r\n        }\r\n        if (sortBy) {\r\n            actors.sort(function (a, b) {\r\n                switch (sortBy) {\r\n                    case \"fname\":\r\n                    case \"lname\":\r\n                        return a[sortBy].toUpperCase().localeCompare(b[sortBy].toUpperCase());\r\n                    case \"aged\":\r\n                        return b.age - a.age;\r\n                    case \"agea\":\r\n                        return a.age - b.age;\r\n                    default:\r\n                        return -1;\r\n                }\r\n            })\r\n        }\r\n        if (actors)\r\n            actorsCards = actors.map((actor, index) => <ActorCard key={index} actor={actor} />);\r\n    }\r\n    return (\r\n        <div className=\"actors-cards\">\r\n            {actorsCards}\r\n        </div>\r\n    )\r\n}","import React from 'react'\r\nimport { Form, FormControl, InputGroup, ListGroup } from 'react-bootstrap'\r\nimport './SearchBox.css'\r\n\r\n\r\nexport default function SearchBox({ placeHolder, searchText, onSearchChange, results, onResultSelected }) {\r\n    return (\r\n        <div className=\"c-search-box\">\r\n            <InputGroup >\r\n                <InputGroup.Prepend>\r\n                    <InputGroup.Text>Search</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl className=\"c-search-input\" type=\"text\" placeholder={placeHolder}\r\n                    value={searchText}\r\n                    onChange={e => onSearchChange(e.target.value)}>\r\n                </FormControl>\r\n            </InputGroup>\r\n            <ListGroup className=\"c-result-box\">\r\n                {results.map((result, index) =>\r\n                    <ListGroup.Item action onClick={() => onResultSelected(index)}>\r\n                        {result}\r\n                    </ListGroup.Item>)}\r\n            </ListGroup>\r\n\r\n        </div>\r\n    )\r\n}","class ActorModel {\r\n    constructor(plainActor, lname, birthday, deathDay, img, imdb, id) {\r\n        if (typeof plainActor === 'object') {\r\n            this.fname = plainActor.fname;\r\n            this.lname = plainActor.lname;\r\n            this.birthday = plainActor.birthday;\r\n            this.deathDay = plainActor.deathDay;\r\n            this.img = plainActor.img;\r\n            this.imdb = plainActor.imdb;\r\n            this.id = plainActor.id;\r\n        } else {\r\n            this.fname = plainActor;\r\n            this.lname = lname;\r\n            this.birthday = birthday;\r\n            this.deathDay = deathDay;\r\n            this.img = img;\r\n            this.imdb = imdb;\r\n            this.id = id;\r\n        }\r\n        this.age = this.getAge(this.birthday, this.deathDay);\r\n    }\r\n\r\n    getAge(dateString, deadString) {\r\n        const today = deadString ? new Date(deadString) : new Date();\r\n        const birthDate = new Date(dateString);\r\n        let age = today.getFullYear() - birthDate.getFullYear();\r\n        const m = today.getMonth() - birthDate.getMonth();\r\n        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {\r\n            age--;\r\n        }\r\n        return age;\r\n    }\r\n}\r\nexport default ActorModel","import React, { useState, useEffect } from 'react'\r\nimport HeaderActorsPage from '../../components/MoviesAndActors/HeaderActorsPage/HeaderActorsPage'\r\nimport { Container } from 'react-bootstrap'\r\nimport Actors from '../../components/MoviesAndActors/Actors/Actors';\r\nimport SearchBox from '../../components/MoviesAndActors/SearchBox/SearchBox';\r\nimport './ActorsPage.css'\r\nimport axios from 'axios';\r\nimport ActorModel from '../../model/ActorModel';\r\n\r\n\r\nexport default function ActorsPage() {\r\n    const [filterText, setFilterText] = useState(\"\");\r\n    const [sortBy, setSortBy] = useState(\"fname\");\r\n    const [searchText, setSearchText] = useState(\"\")\r\n    const [results, setResults] = useState([]);\r\n    const [actors, setActors] = useState([]);\r\n\r\n    const pathPre = process.env.PUBLIC_URL;\r\n\r\n    useEffect(() => {\r\n        axios.get(pathPre.concat(\"/actors.json\")).then(res => {\r\n            const newActors = res.data.map(plainActor => new ActorModel(plainActor));\r\n            setActors(newActors);\r\n        });\r\n    }, []);\r\n\r\n    function filterTextChange(data) {\r\n        setFilterText(data);\r\n    }\r\n    function sortByChange(data) {\r\n        setSortBy(data);\r\n    }\r\n    function handleSearchChange(newSearchText) {\r\n        setSearchText(newSearchText);\r\n        if (newSearchText) {\r\n            //call to TMDB\r\n            const searchURL = \"https://api.themoviedb.org/3/search/person?api_key=d5fc0ebcdc97957658216ba08b5e9436&query=\" + newSearchText;\r\n            axios.get(searchURL).then(response => {\r\n                setResults(response.data.results);\r\n            });\r\n        } else {\r\n            setResults([]);\r\n        }\r\n    }\r\n    function addActor(resultIndex) {\r\n        if (actors && !actors.some(el => parseInt(el.id) === parseInt(results[resultIndex].id))) {\r\n            const imgURL = results[resultIndex].profile_path ? \"https://image.tmdb.org/t/p/w500/\" + results[resultIndex].profile_path : \"\";\r\n            const fullName = results[resultIndex].name.trim();\r\n            let fname = \"\"; let lname = \"\";\r\n            if (fullName) {\r\n                const nameArr = fullName.split(' ');\r\n                if (nameArr.length > 2) {\r\n                    fname = nameArr[0];\r\n                    lname = nameArr.slice(1).join(' ')\r\n                } else {\r\n                    fname = nameArr[0];\r\n                    lname = nameArr[nameArr.length - 1];\r\n                }\r\n            }\r\n            const searchIndexURL = `https://api.themoviedb.org/3/person/${results[resultIndex].id}?api_key=d5fc0ebcdc97957658216ba08b5e9436`;\r\n\r\n            axios.get(searchIndexURL).then(response => {\r\n\r\n                setActors(actors.concat(\r\n                    new ActorModel(fname, lname, response.data.birthday, response.data.deathday,\r\n                        imgURL, \"https://www.imdb.com/name/\" + response.data.imdb_id,\r\n                        response.data.id)));\r\n            });\r\n        }\r\n        setResults([]);\r\n        setSearchText(\"\");\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <h1 className=\"p-actors\">Actors</h1>\r\n            <SearchBox\r\n                placeHolder=\"Actor Name...\"\r\n                searchText={searchText}\r\n                onSearchChange={handleSearchChange}\r\n                results={results.map(result => result.name)}\r\n                onResultSelected={addActor} />\r\n            <HeaderActorsPage onFilterChange={filterTextChange} onSortChange={sortByChange} />\r\n            <Actors filterBy={filterText} sortBy={sortBy} actors={actors} />\r\n        </Container>\r\n    )\r\n}","import React from 'react'\r\nimport { Card, Container, ListGroup } from 'react-bootstrap'\r\nimport './MovieCard.css'\r\nexport default function MovieCard({ movie }) {\r\n    return (\r\n        <Container className=\"c-movie-card mb-3\">\r\n            <Card className=\"c-movie-card-item row g-0\">\r\n                <img src={movie.posterPath} alt=\"\" className=\"col-md-4\" />\r\n                <Card.Body className=\"col-md-8 c-movie-card-body\">\r\n                    <Card.Title className=\"text-center\">\r\n                        {movie.title}\r\n                    </Card.Title>\r\n                    <Card.Text className=\"c-movie-card-text\">\r\n                        <ListGroup variant=\"flush\">\r\n                            <ListGroup.Item>Durarion (minutes): {movie.runtime}</ListGroup.Item>\r\n                            <ListGroup.Item>Director: {movie.director}</ListGroup.Item>\r\n                            <ListGroup.Item>Stars: {movie.stars}</ListGroup.Item>\r\n                            <ListGroup.Item>Plot: {movie.plot}</ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>\r\n        </Container>\r\n    )\r\n}","import React from 'react'\r\nimport MovieCard from '../MovieCard/MovieCard';\r\n\r\nexport default function Movies({ movies }) {\r\n    let moviesCards;\r\n    if (movies) {\r\n        moviesCards = movies.map((movie, index) => <MovieCard key={index} movie={movie}></MovieCard>);\r\n    }\r\n    return (\r\n        <div className=\"c-movies\">\r\n            {moviesCards}\r\n        </div>\r\n    )\r\n}","class MovieModel {\r\n    constructor(id, title, posterPath, plot) {\r\n        this.id = id;\r\n        this.title = title;\r\n        this.posterPath = posterPath;\r\n        this.plot = plot;\r\n    }\r\n    setStars(actors) {\r\n        this.stars = actors;\r\n    }\r\n    setDirector(director) {\r\n        this.director = director;\r\n    }\r\n    setRuntime(runtime) {\r\n        this.runtime = runtime;\r\n    }\r\n}\r\nexport default MovieModel;","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Container, Spinner } from 'react-bootstrap';\r\nimport { useParams } from 'react-router';\r\nimport Movies from '../../components/MoviesAndActors/Movies/Movies';\r\nimport SearchBox from '../../components/MoviesAndActors/SearchBox/SearchBox';\r\nimport MovieModel from '../../model/MovieModel';\r\nimport './MoviesPage.css';\r\n\r\nfunction MoviesPage() {\r\n    const { actorId } = useParams();\r\n    const [movies, setMovies] = useState([]);\r\n    const [results, setResults] = useState([]);\r\n    const [searchText, setSearchText] = useState(\"\")\r\n\r\n    let movieList = [];\r\n    //if it comes from actors page by selecting an actor then the list will be the specific actor movies\r\n    //else it will show top ten all time movies\r\n\r\n    useEffect(() => {\r\n\r\n        if (actorId) {\r\n            const searchURL = `https://api.themoviedb.org/3/person/${actorId}/movie_credits?api_key=d5fc0ebcdc97957658216ba08b5e9436`;\r\n            axios.get(searchURL).then(res => {\r\n                res.data.cast.slice(0, 20).map(plainMovie => {\r\n                    const movie = new MovieModel(plainMovie.id, plainMovie.title, \"https://image.tmdb.org/t/p/w500\" + plainMovie.poster_path, plainMovie.overview);\r\n                    //get info regarding each movie\r\n                    additionalInfo(movie, actorId);\r\n                });\r\n            });\r\n        }\r\n    }, [actorId]);\r\n\r\n\r\n    function additionalInfo(movie, actorId) {\r\n        const promise1 = axios.get(`https://api.themoviedb.org/3/movie/${movie.id}/credits?api_key=d5fc0ebcdc97957658216ba08b5e9436`);\r\n        const promise2 = axios.get(`https://api.themoviedb.org/3/movie/${movie.id}?api_key=d5fc0ebcdc97957658216ba08b5e9436`);\r\n        Promise.all([promise1, promise2]).then(responses => {\r\n            movie.setStars(responses[0].data.cast.slice(0, 9).map(x => x.name).join(\", \"));\r\n            movie.setDirector(responses[0].data.crew.find(x => x.job === 'Director').name);\r\n            movie.setRuntime(responses[1].data.runtime);\r\n            if (actorId) {\r\n                movieList = movieList.concat(movie);\r\n            } else {\r\n                movieList = movieList.concat(movies);\r\n                movieList.unshift(movie);\r\n            }\r\n            setMovies(movieList);\r\n        });\r\n\r\n    }\r\n    function handleSearchChange(newSearchText) {\r\n        setSearchText(newSearchText);\r\n        if (newSearchText) {\r\n            //call to TMDB\r\n            const searchURL = \"https://api.themoviedb.org/3/search/movie?api_key=d5fc0ebcdc97957658216ba08b5e9436&query=\" + newSearchText;\r\n            axios.get(searchURL).then(response => {\r\n                setResults(response.data.results);\r\n            });\r\n        } else {\r\n            setResults([]);\r\n        }\r\n    }\r\n\r\n    function addMovie(resultIndex) {\r\n        if (movies && !movies.some(el => parseInt(el.id) === parseInt(results[resultIndex].id))) {\r\n            const movie = new MovieModel(results[resultIndex].id,\r\n                results[resultIndex].title,\r\n                \"https://image.tmdb.org/t/p/w500\" + results[resultIndex].poster_path,\r\n                results[resultIndex].overview);\r\n            additionalInfo(movie, null);\r\n        }\r\n        setResults([]);\r\n        setSearchText(\"\");\r\n    }\r\n\r\n    return (\r\n        <Container className=\"p-movie\">\r\n            <h1 className=\"p-title\">Movies</h1>\r\n            <SearchBox\r\n                placeHolder=\"Movie Name...\"\r\n                searchText={searchText}\r\n                onSearchChange={handleSearchChange}\r\n                results={results.map(result => result.title)}\r\n                onResultSelected={addMovie} />\r\n            <div className=\"p-movie-results\">\r\n                {movies.length > 0 ?\r\n                    <Movies movies={movies} /> :\r\n                    <Spinner className=\"p-movie-spinner\" />}\r\n            </div>\r\n        </Container>\r\n    )\r\n}\r\nexport default MoviesPage;","import React from 'react'\r\nimport { Container } from 'react-bootstrap'\r\nimport './NotFoundPage.css'\r\nexport default function NotFoundPage() {\r\n    return (\r\n        <Container className=\"p-not-found\">\r\n            <img src=\"https://cdn3.iconfinder.com/data/icons/network-and-communications-10/32/network_Error_lost_no_page_not_found-256.png\" alt=\"\"></img>\r\n        </Container>\r\n    )\r\n}","import { useState } from \"react\";\nimport { Button, ButtonGroup, ButtonToolbar, Form, FormControl, InputGroup } from \"react-bootstrap\";\nimport './NewTodoInput.css';\n\nexport default function NewTodoInput(props) {\n    const [newTodo, setNewTodo] = useState(\"\");\n    const handleSubmit = (e, props) => {\n        e.preventDefault();\n        props.addTodoProps(newTodo);\n        setNewTodo(\"\");\n    }\n\n    const handleChangeNewTodo = (e) => {\n        e.preventDefault();\n        setNewTodo(e.target.value);\n    }\n    return (\n        <Form className=\"todo-form\" onSubmit={(e) => handleSubmit(e, props)}>\n            <InputGroup>\n                <InputGroup.Prepend>\n                    <InputGroup.Text>Add:</InputGroup.Text>\n                </InputGroup.Prepend>\n                <FormControl type=\"text\" placeholder=\"What do you need to do?\" value={newTodo} onChange={(e) => handleChangeNewTodo(e)} />\n            </InputGroup>\n        </Form>\n\n\n\n    )\n}","import { useState } from \"react\";\nimport { Form, Row } from \"react-bootstrap\";\nimport './TodoItem.css'\n\n\nexport default function TodoItem(props) {\n\n    const [addButton, setAddButton] = useState();\n\n    return (\n        <Row className=\"todoitem-row\" onMouseOver={() => setAddButton(true)} onMouseOut={() => setAddButton(false)}>\n            <Form.Check className={props.todo.completed ? \"todoItem-checkbox checked\" : \"todoItem-checkbox col-10 \"}\n                type=\"checkbox\"\n                checked={props.todo.completed}\n                onChange={() => props.handleChangeProps(props.todo.id)}\n                label={props.todo.title}>\n            </Form.Check>\n            <button value={addButton} className={addButton ? \"delete-todoItem-btn visible\" : \"delete-todoItem-btn hidden\"}\n                onClick={() => {\n                    if (!props.todo.completed) {\n                        props.handleShow(props.todo.id);\n                    }\n                    else props.deleteTodoProps(props.todo.id)\n                }}>\n                <img src=\"https://cdn0.iconfinder.com/data/icons/ramotion/256/Trash_empty.png\" alt=\"xxx\" />\n                <img src=\"https://cdn3.iconfinder.com/data/icons/letters-and-numbers-1/32/letter_X_red-256.png\" alt=\"xxx\" /></button>\n\n        </Row>\n    )\n}","import { ListGroup, ListGroupItem } from \"react-bootstrap\";\nimport TodoItem from \"../TodoItem/TodoItem\";\n\nexport default function TodoList(props) {\n\n\n    return (\n        <ListGroup variant=\"flush\">\n            {props.todos.map(todo =>\n                <ListGroupItem key={todo.id}>\n                    <TodoItem todo={todo}\n                        key={todo.id}\n                        handleChangeProps={props.handleChangeProps}\n                        deleteTodoProps={props.deleteTodoProps}\n                        handleShow={props.handleShow}>\n                    </TodoItem>\n                </ListGroupItem>)}\n        </ListGroup>\n    )\n}","import './TodoPage.css';\r\nimport { Button, Container, Modal, ModalBody, ModalFooter, ModalTitle, Row } from 'react-bootstrap';\r\nimport { useState } from 'react';\r\nimport ModalHeader from 'react-bootstrap/esm/ModalHeader';\r\nimport NewTodoInput from '../../components/Todo/NewTodoInput/NewTodoInput';\r\nimport TodoList from '../../components/Todo/TodoList/TodoList';\r\n\r\nfunction TodoPage() {\r\n    const [todos, setTodos] = useState([]);\r\n    const [opensTodos, setOpensTodos] = useState(0);\r\n    const [filter, setFilter] = useState(\"All\");\r\n    const [showModal, setShowModal] = useState(false);\r\n    const [todoForDel, setTodoForDel] = useState();\r\n\r\n    const addTodoItem = title => {\r\n        setTodos(todos.concat({ \"title\": title, \"id\": '_' + Math.random().toString(36).substr(2, 9), \"completed\": false }));\r\n        setOpensTodos(opensTodos + 1);\r\n    };\r\n\r\n    const handleChange = id => {\r\n        setTodos(todos.map(todo => {\r\n            if (todo.id === id) {\r\n                if (todo.completed) setOpensTodos(opensTodos + 1);\r\n                else (setOpensTodos(opensTodos - 1));\r\n                return {\r\n                    ...todo,\r\n                    completed: !todo.completed\r\n                }\r\n            }\r\n            return todo\r\n        }\r\n        ))\r\n    };\r\n\r\n    const deleteTodo = id => {\r\n        for (const todo of todos) {\r\n            if (todo.id === id && !todo.completed) {\r\n                setOpensTodos(opensTodos - 1);\r\n            }\r\n        }\r\n        setTodos(todos.filter(todo => todo.id !== id));\r\n    };\r\n\r\n    const handleClose = () => setShowModal(false);\r\n    const handleShow = (id) => {\r\n        setTodoForDel(id);\r\n        setShowModal(true);\r\n    }\r\n    const handleCloseAndDelete = () => {\r\n        deleteTodo(todoForDel);\r\n        setTodoForDel();\r\n        setShowModal(false);\r\n    }\r\n\r\n    return (\r\n        <Container className=\"p-todos\">\r\n            <h1 className=\"header-todo\">Todos</h1>\r\n            <NewTodoInput addTodoProps={addTodoItem} />\r\n            {\r\n                todos.length > 0 ?\r\n                    <div>\r\n                        <TodoList\r\n                            todos={filter === \"All\" ? todos\r\n                                : filter === \"Completed\" ? todos.filter(todo => todo.completed)\r\n                                    : todos.filter(todo => !todo.completed)\r\n                            }\r\n                            setTodos={setTodos}\r\n                            handleChangeProps={handleChange}\r\n                            deleteTodoProps={deleteTodo}\r\n                            handleShow={handleShow} />\r\n                        <Row className=\"bottom-row\">\r\n                            <div className=\"open-todos\">{opensTodos} items left</div>\r\n                            <div className=\"button-container\">\r\n                                <button className={filter === \"All\" ? \"button-filter marked\" : \"button-filter\"} onClick={() => setFilter(\"All\")}>All</button>\r\n                                <button className={filter === \"Active\" ? \"button-filter marked\" : \"button-filter\"} onClick={() => setFilter(\"Active\")}>Active</button>\r\n                                <button className={filter === \"Completed\" ? \"button-filter marked\" : \"button-filter\"} onClick={() => setFilter(\"Completed\")}>Completed</button>\r\n                            </div>\r\n                        </Row>\r\n                    </div> : \"\"\r\n            }\r\n            <Modal show={showModal} onHide={handleClose} className=\"delete-modal\">\r\n                <ModalHeader closeButton>\r\n                    <ModalTitle>Remove the To-Do?</ModalTitle>\r\n                </ModalHeader>\r\n                <ModalBody>You going to remove a open todo, are you sure?</ModalBody>\r\n                <ModalFooter>\r\n                    <Button className=\"modal-delete-button\" onClick={handleClose}>No, Don't delete!</Button>\r\n                    <Button className=\"modal-delete-button\" onClick={handleCloseAndDelete}>Yes, Delete</Button>\r\n                </ModalFooter>\r\n            </Modal>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default TodoPage;\r\n","import React from 'react';\nimport { InputGroup, FormControl, Button, ButtonGroup, ButtonToolbar } from \"react-bootstrap\";\nimport SearchBox from '../../MoviesAndActors/SearchBox/SearchBox';\nimport './BreedMenuBar.css'\n\nexport default function BreedMenuBar({ filterText, handleFilter, handleChangeImages }) {\n\n    return (\n        <div className=\"c-breeds-menubar\">\n            <ButtonToolbar\n                className=\"justify-content-between\"\n                aria-label=\"Toolbar with Button groups\">\n                <InputGroup >\n                    <InputGroup.Prepend>\n                        <InputGroup.Text>Search:</InputGroup.Text>\n                    </InputGroup.Prepend>\n                    <FormControl placeholder=\"Breed Dog...\" aria-label=\"Filter\" value={filterText} onChange={handleFilter} />\n                </InputGroup>\n\n                <ButtonGroup aria-label=\"First group\">\n                    <Button variant=\"secondary\" onClick={handleChangeImages}>Change images</Button>{' '}\n                </ButtonGroup>\n\n            </ButtonToolbar>\n\n        </div>\n    );\n};\n","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport './BreedCard.css';\nimport { Link, Redirect, useHistory } from 'react-router-dom';\nimport { Card } from \"react-bootstrap\";\n\nfunction BreedCard({ breed, changeImage }) {\n\n    const [img, setImg] = useState(\"https://www.bil-jac.com/Images/DogPlaceholder.svg\");\n    const [redirectTo, setRedirectTo] = useState(\"\");\n    const history = useHistory()\n\n    const cardTitle = breed.charAt(0).toUpperCase() + breed.slice(1);\n\n\n    useEffect(() => {\n        axios.get(\"https://dog.ceo/api/breed/\" + breed + \"/images/random\").then(res => {\n            const newImg = res.data.message;\n            setImg(newImg);\n        });\n\n    }, [breed, changeImage]);\n\n    if (redirectTo) {\n        return <Redirect to={'/breeds/' + redirectTo} />\n    } else {\n        return (\n            <Card className=\"c-breedcard\" >\n                <Card.Title className=\"title\" >\n                    <Link to={'/breeds/' + breed}>{cardTitle}</Link>\n                </Card.Title>\n                <img src={img} alt={breed} onClick={() => {\n                    history.push('/breeds/' + breed);\n                    setRedirectTo('/breeds/' + breed);\n                }} />\n            </Card>\n        );\n    }\n}\n\nexport default BreedCard;","import React from 'react'\nimport Masonry, { ResponsiveMasonry } from 'react-responsive-masonry'\nimport BreedCard from '../BreedCard/BreedCard'\n\nexport default function MasonryBreedCards({ breedsList, changeImage }) {\n\n    return (\n        <ResponsiveMasonry columnsCountBreakPoints={{ 350: 1, 750: 2, 900: 3 }}>\n            <Masonry columnsCount={3} gutter=\"10px\">\n                {\n                    breedsList.map((breed, index) =>\n                        <BreedCard key={index} breed={breed.name} changeImage={changeImage}\n                            style={{ width: \"100%\", display: \"block\" }}> </BreedCard>)\n                }\n            </Masonry>\n        </ResponsiveMasonry>\n    )\n}\n\n","\nexport default class BreedModel {\n    constructor(id, name) {\n        this.id = id;\n        this.name = name;\n    }\n}","import React from 'react';\nimport { Container } from 'react-bootstrap';\nimport BreedMenuBar from '../../components/DogBook/BreedMenuBar/BreedMenuBar';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport MasonryBreedCards from '../../components/DogBook/MasonryBreedCards/MasonryBreedCards';\nimport BreedModel from '../../model/BreedModel';\n\nfunction BreedsPage() {\n\n    const [breeds, setBreeds] = useState([]);\n    const [changeImages, setChangeImages] = useState(false)\n\n    useEffect(() => {\n        axios.get(\"https://dog.ceo/api/breeds/list/all\").then(res => {\n            setBreeds(Object.keys(res.data.message).map((name, index) => new BreedModel(index, name)));\n        });\n    }, []);\n\n    const handleFilter = event => {\n        const filterText = event.target.value;\n        setFilterText(filterText);\n    }\n\n\n    //Filter  \n    const [filterText, setFilterText] = useState(\"\");\n    const breedsFiltered = breeds.filter(function (breed) {\n        return !filterText || breed.name.toLowerCase().includes(filterText.toLowerCase());\n    });\n\n\n    return (\n        <div className=\"p-breads\">\n            <Container>\n                <BreedMenuBar filterText={filterText}\n                    handleFilter={handleFilter}\n                    handleChangeImages={() => setChangeImages(!changeImages)} />\n\n                <MasonryBreedCards breedsList={breedsFiltered} changeImage={changeImages} />\n\n            </Container>\n        </div>\n    );\n\n}\n\nexport default BreedsPage;","import React from 'react'\nimport Masonry, { ResponsiveMasonry } from \"react-responsive-masonry\"\n\nexport default function MasonryImages({ images }) {\n\n\n    const openInNewTab = (url) => {\n        const newWindow = window.open(url.image, '_blank', 'noopener', 'noreferrer')\n        if (newWindow) newWindow.opener = null\n    }\n\n    return (\n        <ResponsiveMasonry columnsCountBreakPoints={{ 350: 1, 750: 2, 900: 3 }}>\n            <Masonry columnsCount={3} gutter=\"10px\">\n                {images.map((image, i) => (\n                    <img key={i} src={image} alt=\"\"\n                        onClick={() => openInNewTab({ image })}\n                        style={{ width: \"100%\", display: \"block\" }}\n                    />\n                ))}\n            </Masonry>\n        </ResponsiveMasonry>\n    )\n}\n\n","import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport './BreedPage.css';\nimport { Container } from 'react-bootstrap';\nimport MasonryImages from '../../components/DogBook/MasonryImages/MasonryImages';\n\nexport default function BreedPage() {\n\n    const { breed } = useParams();\n    const [imgList, setImgList] = useState();\n\n    const cardTitle = breed.charAt(0).toUpperCase() + breed.slice(1);\n\n    useEffect(() => {\n        axios.get(\"https://dog.ceo/api/breed/\" + breed + \"/images\").then(res => {\n            const imgs = res.data.message;\n            setImgList(imgs);\n        });\n\n    }, [breed]);\n\n\n\n    return (\n        imgList ? <div className=\"p-breed\">\n            <div className=\"display-4 headline\">\n                <h1>{cardTitle}</h1>\n            </div>\n            <Container>\n                <MasonryImages images={imgList}></MasonryImages>\n            </Container>\n        </div>\n            :\n            <div></div>\n    );\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport NavbarAppComponent from \"./components/NavbarAppComponent/NavbarAppComponent\";\nimport HomePage from \"./pages/HomePage/HomePage\";\nimport ActorsPage from \"./pages/ActorsPage/ActorsPage\";\nimport MoviesPage from \"./pages/MoviesPage/MoviesPage\";\nimport NotFoundPage from './pages/NotFoundPage/NotFoundPage';\nimport { Container } from 'react-bootstrap';\nimport TodoPage from './pages/TodoPage/TodoPage';\nimport BreedsPage from './pages/BreedsPage/BreedsPage';\nimport BreedPage from './pages/BreedPage/BreedPage';\n\nfunction App() {\n  return (\n    <Container className=\"App\">\n      <HashRouter>\n        <NavbarAppComponent />\n        <Switch>\n          <Route exact path=\"/actors\"><ActorsPage /></Route>\n          <Route exact path=\"/todo\"><TodoPage /></Route>\n          <Route exact path=\"/movies\"><MoviesPage /></Route>\n          <Route exact path=\"/actor/:actorId/movies\"><MoviesPage /></Route>\n          <Route exact path=\"/breeds\"><BreedsPage /></Route>\n          <Route exact path=\"/breeds/:breed\"><BreedPage /></Route>\n          <Route exact path=\"/home\"><HomePage /></Route>\n          <Route exact path=\"/\"><HomePage /></Route>\n          <Route path=\"/\"><NotFoundPage /></Route>\n        </Switch>\n      </HashRouter>\n    </Container>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}